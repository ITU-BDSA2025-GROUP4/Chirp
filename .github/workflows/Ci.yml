name: Publish
#on:
#  workflow_dispatch:
#  release:
#    types: [published]
run-name: ${{ github.actor }} is publishing Release ${{ github.ref_name }}

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  prep-release:
    name: Prepare GitHub Release

    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  release:
    name: Release
    needs: prep-release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS', 'macOS-arm']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
          - kind: macOS-arm
            os: macosarm-latest
            target: osx-arm64
    runs-on: ${{ matrix.os }}

    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.109

      - name: Build CLI
        shell: bash
        run: |
          # Define some variables for things we need
          tag=$(git describe --tags --abbrev=9)
          release_name="Chirp.CLI-$tag-${{ matrix.target }}"

          FILEPATH="src/Chirp.CLI/Version.cs"
          NAMESPACE="MetaData"
          echo "namespace ${NAMESPACE} { public static class Version { public static string version = \"${tag}\";}}" > $FILEPATH

          # Build everything
          dotnet publish src/Chirp.CLI/Chirp.CLI.csproj --framework net9.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"

      - name: Build API
        shell: bash
        run: |
          # Define some variables for things we need
          tag=$(git describe --tags --abbrev=9)
          release_name="Chirp.API-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish src/Chirp.API/Chirp.API.csproj --framework net9.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"


      - name: Populate GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: "Chirp.*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
